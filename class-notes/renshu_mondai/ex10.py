# -*- coding: utf-8 -*-
import mysql.connector as mydb


# =============================================================================
#                       コネクション
# =============================================================================
conn = mydb.connect(
        host = "localhost",
        port = "3306",
        user = "rhoen",
        password = "pass",
        database = "schedule"
    )
cur = conn.cursor(buffered=True)
print(conn.is_connected())
# =============================================================================
#                                     クラス
# =============================================================================
class Schedule():
    
    def __init__(self, desc, datetime):
        self.desc = desc
        self.datetime = datetime
        
    
    def add_event(desc, datetime):
        data = (desc, datetime)
        cur.execute("insert into schedule values()", data)
        
    def show_events():
        cur.execute("select * from schedule")
    
    def delete_event(cls, id):
        data = (str(id),)
        cur.execute("delete from schedule where id=%s", data)
        rows = cur.fetchall()
        for row in rows:
            print(row)
            
        
    @classmethod
    def update_event(cls, id, desc, datetime):
        for e in cls.schedule_list:
            if id == e.id:
                e.__dict__[id] = id
                e.__dict__[desc] = desc
                e.__dict__[datetime] = datetime
                

# =============================================================================
#                                   アプリケーション
# =============================================================================


# open connection
# open cursor

print("スケジュール管理アプリケーションへようこそ。")
while True:
    print("**********メニュー**********")
    choice = input("1)スケジュール追加 2)スケジュール修正 3)スケジュール削除 4)スケジュール表示 9)終了: \n-->")
    
    if choice == "9":
        break
    
    # スケジュール追加 
    if choice == "1":
        print("スケジュールに登録するデータを入力してください。")
        datetime = input("日付(年/月/日 時:分): ")
        desc = input("スケジュール: ")
        data = (desc, datetime)
        cur.execute("insert into schedule values(1, %s, %s)", data)
        # Schedule.add_event(desc, datetime)
        conn.commit()
        print("登録しました。")
        
    # スケジュール修正 
    if choice == "2":
        print("スケジュールを変更する内容を入力してください。")
        id = input("スケジュール番号: ")
        datetime = input("日付(年/月/日 時:分): ")
        desc = input("スケジュール:家族でランチ")
        Schedule.update_event(id, desc, datetime)
        print("修正しました。 ")
        
    # スケジュール削除
    if choice == "3":
        id = input("削除するスケジュールの ID を入力してください: ")
        Schedule.delete_event(id)
        print("削除しました。 ")
        
    if choice == "4":
        
        Schedule.show_events()
        

cur.close()
conn.close()
'''
演習10
■ 仕様
スケジュールを管理するアプリケーションを作成してください。 
実行すると、ウェルカムメッセージとメニューを表示します。 
この機能は、スケジュールデータをデータベースに保存します。(別途データベースを作成してください。)
○ 画面イメージ 
------------------------------------
スケジュール管理アプリケーションへようこそ。
**********メニュー**********
1)スケジュール追加 2)スケジュール修正 3)スケジュール削除 4)スケジュール表示 9)終了:
------------------------------------
● スケジュール追加 
この機能は、スケジュール番号、日時、スケジュール内容をデータベースに登録します。
○ 画面イメージ 
------------------------------------
スケジュールに登録するデータを入力してください。
日付(年/月/日 時:分):2012-5-5 11:30 
スケジュール:友達とランチ
登録しました。
------------------------------------
その後、メニューを表示します。
● スケジュール修正 
この機能は、指定した番号のスケジュールデータを修正します。
■ 画面イメージ 
------------------------------------
スケジュールを変更する内容を入力してください。
スケジュール番号:1
日付(年/月/日 時:分):2012-5-5 12:00 
スケジュール:家族でランチ
修正しました。 
------------------------------------
(スケジュール番号は存在しない場合はエラーメッセージを表示します。) その後、メニューを表示します。

● スケジュール削除 
この機能は、指定したスケジュール番号のスケジュールデータを削除します。
■ 画面イメージ
------------------------------------
削除するスケジュールの ID を入力してください:1
削除しました。 
------------------------------------
(スケジュール番号が存在しない場合はエラーメッセージを表示します。) その後、メニューを表示します。
● スケジュール表示 
この機能は、スケジュールデータを表示します。表示は全件か、指定かを選択して表示させます。
■ 画面イメージ
------------------------------------
1)全件表示 2)指定表示:1
ID:1
日時:2012-05-05 11:30 スケジュール:友達とランチ
ID:2
日時:None スケジュール:企業研修
------------------------------------
■ 画面イメージ
------------------------------------
1)全件表示 2)指定表示:2 
スケジュール ID を指定してください:1
ID:1
日時:2012-05-05 11:30 
スケジュール:友達とランチ 
------------------------------------
その後、メニューを表示します。
● 終了 この機能は、スケジュールデータをデータベースに保存します。(別途データベースを作成してください。)
■ 画面イメージ 
------------------------------------
ありがとうございました。 
------------------------------------
その後、アプリケーションを終了します。
'''
